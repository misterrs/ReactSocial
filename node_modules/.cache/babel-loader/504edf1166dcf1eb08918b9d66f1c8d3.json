{"ast":null,"code":"var _jsxFileName = \"/Users/OEM/Desktop/GeekBrains/ReactJS/social/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as React from 'react';\nimport Massage from './massage.jsx';\nimport { useState, useRef, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { TextField } from '@mui/material';\nimport { datatype } from 'faker/locale/zh_TW';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messageList, setMesssageList] = useState([]);\n  const messengers = [{\n    name: \"chat#1\",\n    id: datatype.uuid()\n  }, {\n    name: \"chat#2\",\n    id: datatype.uuid()\n  }, {\n    name: \"chat#3\",\n    id: datatype.uuid()\n  }, {\n    name: \"chat#4\",\n    id: datatype.uuid()\n  }];\n  const ref = useRef(undefined);\n  const user = \"Michael\";\n\n  const createComment = e => setMessage(e.target.value);\n\n  const addComment = () => {\n    setMesssageList([...messageList, {\n      text: message,\n      user: user\n    }]);\n    setMessage('');\n    scroll.scrollToBottom(\"smooth\");\n  };\n\n  const answerBot = () => {\n    setTimeout(() => setMesssageList([...messageList, {\n      text: \"hello i'm Bot. What is your name?\",\n      user: \"RoBot\"\n    }]), 1500);\n  };\n\n  const scrollToBottom = () => {\n    setTimeout(() => scroll.scrollToBottom(\"smooth\"), 1500);\n  };\n\n  useEffect(() => {\n    var _messageList;\n\n    if (((_messageList = messageList[messageList.length - 1]) === null || _messageList === void 0 ? void 0 : _messageList.user) === user) {\n      answerBot();\n      scrollToBottom();\n      return () => clearTimeout(answerBot, scrollToBottom);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Massage, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"commentForm\",\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          inputref: ref,\n          value: message,\n          onChange: createComment,\n          label: user,\n          variant: \"outlined\",\n          fullWidth: true,\n          focused: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"commentBtn\",\n          onClick: addComment,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(MessageList, {\n        messageList: messageList,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JSymVYtzcyGkejJCLZm/g5dCRWs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/OEM/Desktop/GeekBrains/ReactJS/social/my-app/src/App.jsx"],"names":["React","Massage","useState","useRef","useEffect","MessageList","animateScroll","scroll","TextField","datatype","App","message","setMessage","messageList","setMesssageList","messengers","name","id","uuid","ref","undefined","user","createComment","e","target","value","addComment","text","scrollToBottom","answerBot","setTimeout","length","clearTimeout"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport Massage from './massage.jsx';\nimport { useState, useRef, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { TextField } from '@mui/material';\nimport { datatype } from 'faker/locale/zh_TW';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [messageList, setMesssageList] = useState([]);\n  const messengers = [\n    {name: \"chat#1\", id: datatype.uuid()},\n    {name: \"chat#2\", id: datatype.uuid()},\n    {name: \"chat#3\", id: datatype.uuid()},\n    {name: \"chat#4\", id: datatype.uuid()}\n  ]\n  const ref = useRef(undefined);\n  const user = \"Michael\";\n\n  const createComment = (e) => setMessage(e.target.value);\n\n  const addComment = () => {\n    setMesssageList([...messageList, {text:message, user:user}]);\n    setMessage('');\n    scroll.scrollToBottom(\"smooth\");\n  };\n\n  const answerBot = () => {\n    setTimeout(\n      () => \n      setMesssageList([\n        ...messageList,\n        {text:\"hello i'm Bot. What is your name?\", user:\"RoBot\" },\n      ]),\n      1500\n    );\n  };\n\n  const scrollToBottom = () => {\n    setTimeout(() =>\n      scroll.scrollToBottom(\"smooth\"),\n      1500\n    )\n  }\n\n  useEffect(() => {\n    if (messageList[messageList.length - 1]?.user === user) {\n      answerBot();\n      scrollToBottom();\n      return () => clearTimeout(answerBot, scrollToBottom);\n    }\n  }, );\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Massage user = {user}/>\n        <form className = \"commentForm\" action=\"#\">\n        <TextField \n          inputref = {ref} \n          value = {message} \n          onChange={createComment}\n          label={user}\n          variant=\"outlined\"\n          fullWidth\n          focused\n        />\n        <button className = \"commentBtn\" onClick={addComment}>Send</button>\n        </form>\n      </header>\n      <div className =\"comments\">\n        <MessageList messageList={messageList} user={user}></MessageList>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}