{"ast":null,"code":"var _jsxFileName = \"/Users/OEM/Desktop/GeekBrains/ReactJS/social/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Massage from './massage.jsx';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport MessageList from './MessageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = \"Michael\";\nexport const App = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [messageList, setMesssageList] = useState([]);\n  const ref = useRef(undefined);\n  useEffect(() => {\n    var _ref$current;\n\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus();\n  }, [text]); // const result = messageList.map((mess, i) => {\n  //   return <p key={i}>{mess}</p>;\n  // });\n\n  const createComment = e => setText(e.target.value);\n\n  function addComment() {\n    setMesssageList([...messageList, text]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Massage, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"commentForm\",\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          inputref: ref,\n          value: text,\n          onChange: createComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(MessageList, {\n        messageList: messageList,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"oS3O/f0isuTk0h5OwNXWsw6ckso=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/OEM/Desktop/GeekBrains/ReactJS/social/my-app/src/App.js"],"names":["Massage","useState","useRef","useEffect","MessageList","user","App","text","setText","messageList","setMesssageList","ref","undefined","current","focus","createComment","e","target","value","addComment"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,eAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAIA,MAAMC,IAAI,GAAG,SAAb;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,eAAd,IAAiCT,QAAQ,CAAC,EAAD,CAA/C;AAGA,QAAMU,GAAG,GAAGT,MAAM,CAACU,SAAD,CAAlB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,oBAAAQ,GAAG,CAACE,OAAJ,8DAAaC,KAAb;AACC,GAFM,EAEJ,CAACP,IAAD,CAFI,CAAT,CAPuB,CAWrB;AACA;AACA;;AAEF,QAAMQ,aAAa,GAAIC,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AACA,WAASC,UAAT,GAAuB;AACrBT,IAAAA,eAAe,CAAC,CAAC,GAAGD,WAAJ,EAAiBF,IAAjB,CAAD,CAAf;AAGD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAIF;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,KAAK,EAAG,aAAd;AAA4B,QAAA,MAAM,EAAC,GAAnC;AAAA,gCACA;AAAU,UAAA,QAAQ,EAAIM,GAAtB;AAA2B,UAAA,KAAK,EAAIJ,IAApC;AAA0C,UAAA,QAAQ,EAAEQ;AAApD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEV,WAA1B;AAAuC,QAAA,IAAI,EAAEJ;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApCM;;GAAMC,G;;KAAAA,G;AAsCb,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Massage from './massage.jsx';\nimport { useState } from 'react';\nimport { useRef } from 'react'; \nimport { useEffect } from 'react';\nimport MessageList from './MessageList';\n\n\n\nconst user = \"Michael\";\n\nexport const App = () => {\n  const [text, setText] = useState('');\n  const [messageList, setMesssageList] = useState([]);\n\n\n  const ref = useRef(undefined);\n\n  useEffect(() => {\n    ref.current?.focus();\n    }, [text]);\n\n    // const result = messageList.map((mess, i) => {\n    //   return <p key={i}>{mess}</p>;\n    // });\n\n  const createComment = (e) => setText(e.target.value);\n  function addComment () {\n    setMesssageList([...messageList, text]);\n\n\n  }\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <Massage user = {user}/>\n        <form class = \"commentForm\" action=\"#\">\n        <textarea inputref = {ref} value = {text} onChange={createComment}/>\n        <button onClick={addComment}>Comment</button>\n        </form>\n      </header>\n      <div class=\"comments\">\n        <MessageList messageList={messageList} user={user}></MessageList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}