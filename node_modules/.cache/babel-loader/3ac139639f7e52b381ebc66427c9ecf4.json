{"ast":null,"code":"var _jsxFileName = \"/Users/OEM/Desktop/GeekBrains/ReactJS/social/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Massage from './massage.jsx';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport MessageList from './MessageList';\nimport faker from 'faker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messageList, setMesssageList] = useState([]);\n  const ref = useRef(undefined);\n  const user = \"Michael\";\n\n  const createComment = e => setMessage(e.target.value);\n\n  const addComment = () => {\n    setMesssageList([...messageList, {\n      text: message,\n      user: user,\n      id: faker.datatype.uuid()\n    }]);\n    setMessage('');\n  };\n\n  const answerBot = () => {\n    setTimeout(() => setMesssageList([...messageList, {\n      text: \"hello i'm Bot. What is your name?\",\n      author: \"RoBot\",\n      id: faker.datatype.uuid()\n    }]), 1500);\n  };\n\n  useEffect(() => {\n    var _messageList;\n\n    if (((_messageList = messageList[messageList.length - 1]) === null || _messageList === void 0 ? void 0 : _messageList.author) === user) {\n      answerBot();\n      return () => clearTimeout(answerBot);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Massage, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"commentForm\",\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          inputref: ref,\n          value: message,\n          onChange: createComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(MessageList, {\n        messageList: messageList,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JSymVYtzcyGkejJCLZm/g5dCRWs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/OEM/Desktop/GeekBrains/ReactJS/social/my-app/src/App.jsx"],"names":["Massage","useState","useRef","useEffect","MessageList","faker","App","message","setMessage","messageList","setMesssageList","ref","undefined","user","createComment","e","target","value","addComment","text","id","datatype","uuid","answerBot","setTimeout","author","length","clearTimeout"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,eAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,eAAd,IAAiCT,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAMU,GAAG,GAAGT,MAAM,CAACU,SAAD,CAAlB;AACA,QAAMC,IAAI,GAAG,SAAb;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,eAAe,CAAC,CAAC,GAAGD,WAAJ,EAAiB;AAACU,MAAAA,IAAI,EAAEZ,OAAP;AAAgBM,MAAAA,IAAI,EAAEA,IAAtB;AAA4BO,MAAAA,EAAE,EAAEf,KAAK,CAACgB,QAAN,CAAeC,IAAf;AAAhC,KAAjB,CAAD,CAAf;AACAd,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,QAAMe,SAAS,GAAG,MAAM;AACtBC,IAAAA,UAAU,CACR,MACAd,eAAe,CAAC,CACd,GAAGD,WADW,EAEd;AAACU,MAAAA,IAAI,EAAC,mCAAN;AAA2CM,MAAAA,MAAM,EAAC,OAAlD;AAA2DL,MAAAA,EAAE,EAAEf,KAAK,CAACgB,QAAN,CAAeC,IAAf;AAA/D,KAFc,CAAD,CAFP,EAMR,IANQ,CAAV;AAQD,GATD;;AAWAnB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAI,iBAAAM,WAAW,CAACA,WAAW,CAACiB,MAAZ,GAAqB,CAAtB,CAAX,8DAAqCD,MAArC,MAAgDZ,IAApD,EAA0D;AACxDU,MAAAA,SAAS;AACT,aAAO,MAAMI,YAAY,CAACJ,SAAD,CAAzB;AACD;AACF,GALQ,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAIV;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,KAAK,EAAG,aAAd;AAA4B,QAAA,MAAM,EAAC,GAAnC;AAAA,gCACA;AACE,UAAA,QAAQ,EAAIF,GADd;AAEE,UAAA,KAAK,EAAIJ,OAFX;AAGE,UAAA,QAAQ,EAAEO;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADA,eAKA;AAAQ,UAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAET,WAA1B;AAAuC,QAAA,IAAI,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhDQP,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Massage from './massage.jsx';\nimport { useState } from 'react';\nimport { useRef } from 'react'; \nimport { useEffect } from 'react';\nimport MessageList from './MessageList';\nimport faker from 'faker';\n\n\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [messageList, setMesssageList] = useState([]);\n  const ref = useRef(undefined);\n  const user = \"Michael\";\n\n  const createComment = (e) => setMessage(e.target.value);\n\n  const addComment = () => {\n    setMesssageList([...messageList, {text: message, user: user, id: faker.datatype.uuid()}]);\n    setMessage('');\n  };\n\n  const answerBot = () => {\n    setTimeout(\n      () => \n      setMesssageList([\n        ...messageList,\n        {text:\"hello i'm Bot. What is your name?\", author:\"RoBot\", id: faker.datatype.uuid() },\n      ]),\n      1500\n    );\n  };\n\n  useEffect(() => {\n    if (messageList[messageList.length - 1]?.author === user) {\n      answerBot();\n      return () => clearTimeout(answerBot);\n    }\n  }, );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Massage user = {user}/>\n        <form class = \"commentForm\" action=\"#\">\n        <textarea \n          inputref = {ref} \n          value = {message} \n          onChange={createComment}/>\n        <button onClick={addComment}>Comment</button>\n        </form>\n      </header>\n      <div class=\"comments\">\n        <MessageList messageList={messageList} user={user}></MessageList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}