{"ast":null,"code":"var _jsxFileName = \"/Users/OEM/Desktop/GeekBrains/ReactJS/social/src/Chats.jsx\";\nimport './chats.css';\nimport { datatype } from 'faker/locale/zh_TW';\nimport React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatList = () => {\n  const chats = [{\n    name: \"Achat#1\",\n    id: datatype.uuid(),\n    text: \"Lists are a continuous group of text or images.\"\n  }, {\n    name: \"Wchat#1\",\n    id: datatype.uuid(),\n    text: \"Lists are a continuous group of text or images.\"\n  }, {\n    name: \"Dchat#1\",\n    id: datatype.uuid(),\n    text: \"Lists are a continuous group of text or images.\"\n  }, {\n    name: \"Rchat#1\",\n    id: datatype.uuid(),\n    text: \"Lists are a continuous group of text or images.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatHolder\",\n    children: chats.map(({\n      name,\n      id,\n      text\n    }) => /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: name,\n            src: \"/static/images/avatar/1.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text,\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                display: 'inline'\n              },\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\",\n              children: \"Ali Connors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\",\n        component: \"li\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatList;\nexport default ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["/Users/OEM/Desktop/GeekBrains/ReactJS/social/src/Chats.jsx"],"names":["datatype","React","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","ChatList","chats","name","id","uuid","text","map","width","maxWidth","bgcolor","display"],"mappings":";AAAA,OAAO,aAAP;AACA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAMC,KAAK,GAAG,CACV;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAEZ,QAAQ,CAACa,IAAT,EAAtB;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GADU,EAEV;AAACH,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAEZ,QAAQ,CAACa,IAAT,EAAtB;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GAFU,EAGV;AAACH,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAEZ,QAAQ,CAACa,IAAT,EAAtB;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GAHU,EAIV;AAACH,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAEZ,QAAQ,CAACa,IAAT,EAAtB;AAAuCC,IAAAA,IAAI,EAAE;AAA7C,GAJU,CAAd;AAOA,sBACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA,cACKJ,KAAK,CAACK,GAAN,CAAU,CAAC;AAACJ,MAAAA,IAAD;AAAOC,MAAAA,EAAP;AAAWE,MAAAA;AAAX,KAAD,kBACP,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE,GAA3B;AAAgCC,QAAAA,OAAO,EAAE;AAAzC,OAAV;AAAA,8BACA,QAAC,QAAD;AAAU,QAAA,UAAU,EAAC,YAArB;AAAA,gCACI,QAAC,cAAD;AAAA,iCACA,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAGP,IAAd;AAAoB,YAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,YAAD;AACA,UAAA,OAAO,EAAEG,IADT;AAEA,UAAA,SAAS,eACL,QAAC,KAAD,CAAO,QAAP;AAAA,oCACA,QAAC,UAAD;AACI,cAAA,EAAE,EAAE;AAAEK,gBAAAA,OAAO,EAAE;AAAX,eADR;AAEI,cAAA,SAAS,EAAC,MAFd;AAGI,cAAA,OAAO,EAAC,OAHZ;AAII,cAAA,KAAK,EAAC,cAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EASCP,EATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAsBA,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,OAAjB;AAAyB,QAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAtBA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAvCD;;KAAMH,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import './chats.css';\nimport { datatype } from 'faker/locale/zh_TW';\nimport React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\n\n\nconst ChatList = () => {\n\n    const chats = [\n        {name: \"Achat#1\", id: datatype.uuid(), text: \"Lists are a continuous group of text or images.\"},\n        {name: \"Wchat#1\", id: datatype.uuid(), text: \"Lists are a continuous group of text or images.\"},\n        {name: \"Dchat#1\", id: datatype.uuid(), text: \"Lists are a continuous group of text or images.\"},\n        {name: \"Rchat#1\", id: datatype.uuid(), text: \"Lists are a continuous group of text or images.\"}\n    ];\n\n    return (\n        <div className = \"chatHolder\">\n            {chats.map(({name, id, text}) => (\n                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                    <Avatar alt= {name} src=\"/static/images/avatar/1.jpg\" />\n                    </ListItemAvatar>\n                    <ListItemText\n                    primary={text}\n                    secondary={\n                        <React.Fragment>\n                        <Typography\n                            sx={{ display: 'inline' }}\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                        >\n                            Ali Connors\n                        </Typography>\n                        {id}\n                        </React.Fragment>\n                    }\n                    />\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n                </List>\n            ))}\n        </div>\n    );\n}\n\n\nexport default ChatList;"]},"metadata":{},"sourceType":"module"}